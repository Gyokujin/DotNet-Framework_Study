빌드(Build) : 소스 코드를 OS가 이해할 수 있는 2진 파일로 변환. 실행 가능한 소프트웨어 결과물로 만드는 과정
컴파일(Compile) : 빌드 이후에 소스 코드를 바이너리 코드(컴퓨터가 이해할 수 있는 기계어)로 변환
통합개발 환경(Integrated Development Environment, IDE) : 소스 코드 에디터, 빌드, 디버깅까지 제공하는 환경을 제공하는 툴

프레임워크(Frame Work) : 소프트웨어를 개발하기 위한 기본 골자를 의미한다. 전체 구조와 흐름을 관리하며, 이 프레임워크 안에서 필요한 코드를 작성하여 애플리케이션을 개발하도록 한다.
.NET : MS에서 만든 무료 오픈소스. 개발자 플랫폼이다. C#은 .NET 환경에서 사용하기 위해 개발된 언어이다. (가장 .NET 환경에서 최적화된 언어)
.NET Framework : Windows 환경에서 사용할 애플리케이션을 개발하는 데 사용하는 주요 플랫폼
.NET Core : 윈도우에서 다중 플랫폼(리눅스, 윈도우, 맥)을 지원하기 위한 프로젝트
.NET 5, .NET 6 : .NET Core에서 보다 확장된 버전
Mono : 오픈소스, Core 이전부터 진행되던 프레임워크로 크로스 플랫폼을 지원한다.(유니티의 Mono와 같다)

.NET Framework의 방식
1. C#으로 코드를 작성
2. 컴파일러가 .NET 어셈블리(IL, 메타데이터로 컴파일) 변환
3. 런타임(IL을 실행)

.NET Standard : .NET API의 공식 사양으로 .NET의 각 프레임워크마다 지원하는 사양이 다르다.(버전업의 개념이라고 보면 된다)

CLR(Common Language Runtime) : 일부 AOT 컴파일 사용 가능하게 한다.

유니티의 방식
1. C#으로 코드를 작성
2. Mono(유니티 자체)로 컴파일
3. 유니티 런타임